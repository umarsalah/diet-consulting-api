# Graphql schema for the diet consulting system

interface Node {
  id: ID!
}

enum Role {
  PATIENT
  CONSULTANT
}

type User implements Node {
  id: ID!
  firstName: String!
  middleName: String
  lastName: String!
  userName: String!
  email: String!
  role: Role!
  password: String!
  createdAt: String
  updatedAt: String
}

type Question implements Node {
  id: ID!
  user: User!
  title: String!
  description: String!
  isAnswered: Boolean!
  createdAt: String
  updatedAt: String
}

type Answer implements Node {
  id: ID!
  user: User!
  question: Question!
  title: String!
  description: String!
  isDraft: Boolean!
  createdAt: String
  updatedAt: String
}

type Query {  
  questions(page: Int, offset: Int, limit: Int): QuestionsPayload!
  question(id: ID!): Question
}

type QuestionsPayload {
  data: [Question!]
}

type Mutation {
  createUser(
    firstName: String!
    middleName: String
    lastName: String!
    userName: String!
    email: String!
    role: Role!
    password: String!
  ): User

  questionCreate(title: String!, description: String!): Question
  answerCreate(
    question: ID!
    title: String!
    description: String!
    recommendations: String
    isDraft: Boolean!
  ): Answer

  answerUpdate(
    id: ID!
    title: String!
    description: String!
    isDraft: Boolean!
  ): Answer
}
